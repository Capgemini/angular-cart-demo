{"version":3,"sources":["../../../../server/api/product/product.integration.js"],"names":[],"mappings":"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","file":"product.integration.js","sourcesContent":["'use strict';\n\nvar app = require('../..');\nimport request from 'supertest';\n\nvar newProduct;\n\ndescribe('Product API:', function() {\n\n  describe('GET /api/products', function() {\n    var products;\n\n    beforeEach(function(done) {\n      request(app)\n        .get('/api/products')\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          products = res.body;\n          done();\n        });\n    });\n\n    it('should respond with JSON array', function() {\n      products.should.be.instanceOf(Array);\n    });\n\n  });\n\n  describe('POST /api/products', function() {\n    beforeEach(function(done) {\n      request(app)\n        .post('/api/products')\n        .send({\n          name: 'New Product',\n          description: 'This is the brand new product!!!',\n          price: 99,\n          quantity: 2\n        })\n        .expect(201)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          newProduct = res.body;\n          done();\n        });\n    });\n\n    it('should respond with the newly created product', function() {\n      newProduct.name.should.equal('New Product');\n      newProduct.description.should.equal('This is the brand new product!!!');\n      newProduct.price.should.equal(99);\n      newProduct.quantity.should.equal(2);\n    });\n\n  });\n\n  describe('GET /api/products/:id', function() {\n    var product;\n\n    beforeEach(function(done) {\n      request(app)\n        .get('/api/products/' + newProduct._id)\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          product = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      product = {};\n    });\n\n    it('should respond with the requested product', function() {\n      product.name.should.equal('New Product');\n      product.description.should.equal('This is the brand new product!!!');\n      product.price.should.equal(99);\n      product.quantity.should.equal(2);\n    });\n\n  });\n\n  describe('PUT /api/products/:id', function() {\n    var updatedProduct;\n\n    beforeEach(function(done) {\n      request(app)\n        .put('/api/products/' + newProduct._id)\n        .send({\n          name: 'Updated Product',\n          description: 'This is the updated product!!!',\n          quantity: 1,\n          price: 50,\n        })\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end(function(err, res) {\n          if (err) {\n            return done(err);\n          }\n          updatedProduct = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      updatedProduct = {};\n    });\n\n    it('should respond with the updated product', function() {\n      updatedProduct.name.should.equal('Updated Product');\n      updatedProduct.description.should.equal('This is the updated product!!!');\n      updatedProduct.price.should.equal(50);\n      updatedProduct.quantity.should.equal(1);\n    });\n\n  });\n\n  describe('DELETE /api/products/:id', function() {\n\n    it('should respond with 204 on successful removal', function(done) {\n      request(app)\n        .delete('/api/products/' + newProduct._id)\n        .expect(204)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          done();\n        });\n    });\n\n    it('should respond with 404 when product does not exist', function(done) {\n      request(app)\n        .delete('/api/products/' + newProduct._id)\n        .expect(404)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          done();\n        });\n    });\n\n  });\n\n});\n"]}